http {
    include mime.types;
    # here we define name of entrance files
    index   index.html index.htm;

    server {
        # we ask to listen to a specified port
        listen      8080;
        server_name localhost;

        # file path to serve when requests come
        root "/Users/Beknazar_Kemelov/Documents/my projects/nginx-static-site";

        # if you don't want to 
        # when you want to stay at this location and use other context, you may use the 'rewrite' directive
        rewrite ^/number/(\w+) /count/$1;

        location ~* /count/[0-9] {
            root "/Users/Beknazar_Kemelov/Documents/my projects/nginx-static-site";
            try_files /index.html =404;
        }

        # this directive grab the value and append into the root directive value
        location /cars {
            # result will be "/Users/Beknazar_Kemelov/Documents/my projects/nginx-static-site/cars"

            # root takes the full cars (/cars) and puts that after the root. Nginx will look for files in: "/Users/Beknazar_Kemelov/Documents/my projects/nginx-static-site/cars"
            root "/Users/Beknazar_Kemelov/Documents/my projects/nginx-static-site";
        }

        location /vehicles {
            # alias takes the part after the location directive and puts that after the root. Nginx will look for files in: "/Users/Beknazar_Kemelov/Documents/my projects/nginx-static-site/cars"
            alias "/Users/Beknazar_Kemelov/Documents/my projects/nginx-static-site/cars";
        }

        location /motorcycles {
            root "/Users/Beknazar_Kemelov/Documents/my projects/nginx-static-site";
            try_files /motorcycles/motorcycles.html /index.html =404;
        }

        location /sedans {
            # this directive redirects to the cars location and sends the 307 status
            return 307 /cars;
        }
    }
}

events {}